function Yo = apply_dform(Yi, registration, regdirection, interpmethod)
% apply_dform: apply transformations to intensity images
%
% Usage:
%   Yo = apply_dform(Yi, registration, regdirection, interpmethod)
% 
% Args:
%   Yi: 3D image (intensity values in XYZ coordinates)
%   registration: registration structure (generated by generate_dform)
%   regdirection: direction of registration 1to2, 2to1
%   interpmethod: method for interpolation and extrapolation 
%       (default, 'linear')
%       ('cubic')
%       ('nearest')
%
% See also:
%   generate_dform, generate_dform_perfile

if ~exist('regdirection', 'var') || isempty(regdirection)
    regdirection = '1to2';
end

if ~exist('interpmethod', 'var') || isempty(interpmethod)
    interpmethod = 'linear';
end

if contains(regdirection, '1to2')
    
    F = griddedInterpolant(...
        {registration.xv2, registration.yv2, registration.zv2}, Yi);
    F.Method = interpmethod;
    F.ExtrapolationMethod = interpmethod;
    
    Yo = F(registration.xyz_v1tov2(:, 1), registration.xyz_v1tov2(:, 2), ...
        registration.xyz_v1tov2(:, 3));
    Yo = reshape(Yo, registration.vol1_sz);
    
elseif contains(regdirection, '2to1')
    
    F = griddedInterpolant(...
        {registration.xv1, registration.yv1, registration.zv1}, Yi);
    F.Method = interpmethod;
    F.ExtrapolationMethod = interpmethod;
    
    Yo = F(registration.xyz_v2tov1(:, 1), ...
        registration.xyz_v2tov1(:, 2), registration.xyz_v2tov1(:, 3));
    Yo = reshape(Yo, registration.vol2_sz);
    
end

end
